-- STEP 0. READ ABOUT JOINING TABLES (CROSS JOIN/ INNER JOIN ...)
-- STEP 1. CREATE THE FOLLOWING TABLES
-- STEP 2. FILL THE TABLE WITH THE TEST DATAS

-- TABLE AUTHOR
CREATE TABLE AUTHOR  (
	AUTHOR_ID SERIAL UNIQUE PRIMARY KEY,
	AUTHOR_NAME VARCHAR(50),
	BIRTH_YEAR DATE,
	DEATH_YEAR DATE
);
-- HAVE MORE ENTRIES
INSERT INTO AUTHOR  (AUTHOR_ID, AUTHOR_NAME, BIRTH_YEAR, DEATH_YEAR) values (1, 'Georgie', '1945-09-02', NULL);
INSERT INTO AUTHOR  (AUTHOR_ID, AUTHOR_NAME, BIRTH_YEAR, DEATH_YEAR) values (2, 'Nan', '1943-05-22', '2019-04-25');

-- TABLE BOOK
CREATE TABLE BOOK  (
	BOOK_ID SERIAL PR,
	AUTHOR_ID INT REFERENCES AUTHOR(AUTHOR_ID),
	TITLE VARCHAR(50),
	PUBLISH_YEAR DATE,
	PUBLISHING_HOUSE VARCHAR(50),
	RATING DECIMAL(2,1)
);
-- HAVE MORE ENTRIES
INSERT INTO BOOK  (BOOK_ID, AUTHOR_ID, TITLE, PUBLISH_YEAR, PUBLISHING_HOUSE, RATING) values (1, NULL, 'Denice', '2001-05-16', 'Lowth', 1.6);
INSERT INTO BOOK  (BOOK_ID, AUTHOR_ID, TITLE, PUBLISH_YEAR, PUBLISHING_HOUSE, RATING) values (2, NULL, 'Dennet', '2018-12-22', 'Drable', 3.0);
INSERT INTO BOOK  (BOOK_ID, AUTHOR_ID, TITLE, PUBLISH_YEAR, PUBLISHING_HOUSE, RATING) values (3, 3, 'Letty', '2012-03-03', 'Pryde', 2.3);

-- TABLE ADAPTATION
CREATE TABLE ADAPTATION  (
	BOOK_ID INTEGER REFERENCES BOOK(BOOK_ID),
	ADAP_TYPE VARCHAR(100),
	TITLE VARCHAR(100),
	PUBLISH_YEAR DATE,
	RATING DECIMAL(2,1)
);
-- HAVE MORE ENTRIES
INSERT INTO ADAPTATION  (BOOK_ID, ADAP_TYPE, TITLE, PUBLISH_YEAR, RATING) values (1, 'movie', 'Secrets of Jonathan Sperry, The', '2011-01-25', 1.6);
INSERT INTO ADAPTATION  (BOOK_ID, ADAP_TYPE, TITLE, PUBLISH_YEAR, RATING) values (3, 'movie', 'The Legend of Awesomest Maximus', '2016-03-10', 3.9);
INSERT INTO ADAPTATION  (BOOK_ID, ADAP_TYPE, TITLE, PUBLISH_YEAR, RATING) values (5, 'game', 'Robots', '2010-05-20', 4.8);

-- STEP 3. COMPLETE TASKS
-- Q1
SELECT AUTHOR_NAME, TITLE 
FROM AUTHOR 
RIGHT JOIN BOOK 
ON AUTHOR.AUTHOR_ID = BOOK.AUTHOR_ID;

-- Q2
SELECT AUTHOR_NAME, TITLE, PUBLISH_YEAR 
FROM AUTHOR 
RIGHT JOIN BOOK 
ON AUTHOR.AUTHOR_ID = BOOK.AUTHOR_ID
WHERE BOOK.PUBLISH_YEAR > '2005-05-16';

-- Q3
SELECT BOOK.TITLE, BOOK.PUBLISH_HOUSE, ADAPTATION.TITLE, ADAPTATION.ADAP_TYPE 
FROM BOOK 
INNER JOIN ADAPTATION 
ON BOOK.BOOK_ID = ADAPTATION.BOOK_ID;

-- Q4
SELECT TITLE, PUBLISH_YEAR
FROM BOOK
LEFT JOIN BOOK_REVIEW
ON BOOK.BOOK_ID = BOOK_REVIEW.BOOK_ID
WHERE BOOK_REVIEW.BOOK_ID IS NULL

-- Q5
SELECT B.BOOK_ID, B.TITLE, A.AUTHOR_NAME 
FROM BOOK AS B
LEFT JOIN AUTHOR AS A
ON B.AUTHOR_ID = A.AUTHOR_ID
WHERE A.BIRTH_YEAR < '2000-01-01'

-- Q6
SELECT TITLE, RATING 
FROM AUTHOR 
INNER JOIN BOOK 
ON AUTHOR.AUTHOR_ID = BOOK.AUTHOR_ID 
WHERE AUTHOR.DEATH_YEAR IS NOT NULL

-- Q7
SELECT B.TITLE, A.TITLE, A.PUBLISH_YEAR 
FROM BOOK AS B 
LEFT JOIN ADAPTATION AS A 
ON B.BOOK_ID = A.BOOK_ID;

-- Q8
CREATE TABLE BOOK_REVIEW(
	BOOK_ID INT REFERENCES BOOK(BOOK_ID),
	REVIEW TEXT,
	AUTHOR VARCHAR(50)
);
INSERT INTO BOOK_REVIEW (BOOK_ID, REVIEW, AUTHOR) VALUES (1, 'Aenean fermentum. Donec ut mauris eget massa tempor convallis. Nulla neque libero, convallis eget, eleifend luctus, ultricies eu, nibh.', 'Heidie');
INSERT INTO BOOK_REVIEW (BOOK_ID, REVIEW, AUTHOR) VALUES (2, 'Suspendisse potenti. In eleifend quam a odio. In hac habitasse platea dictumst.', 'Torrence');

SELECT B.TITLE, BR.REVIEW, BR.AUTHOR 
FROM BOOK_REVIEW AS BR 
RIGHT JOIN BOOK AS B 
ON B.BOOK_ID = BR.BOOK_ID; 
